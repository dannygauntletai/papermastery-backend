name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      # Add mock services if needed
      # For example, you could add a PostgreSQL service for database tests
      
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install flake8 pytest pytest-cov
        
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Test with pytest
      run: |
        # Create .env.test for testing
        cp .env.example .env.test
        # Run tests with coverage
        python -m pytest --cov=app tests/ --cov-report=xml
      env:
        # Set test environment variables
        APP_ENV: "testing"
        SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.TEST_SUPABASE_KEY }}
        PINECONE_API_KEY: ${{ secrets.TEST_PINECONE_API_KEY }}
        OPENAI_API_KEY: ${{ secrets.TEST_OPENAI_API_KEY }}
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 